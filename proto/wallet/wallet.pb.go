// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: proto/wallet/wallet.proto

package wallet

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReserveFundsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Amount        float64                `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReserveFundsRequest) Reset() {
	*x = ReserveFundsRequest{}
	mi := &file_proto_wallet_wallet_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReserveFundsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveFundsRequest) ProtoMessage() {}

func (x *ReserveFundsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_wallet_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveFundsRequest.ProtoReflect.Descriptor instead.
func (*ReserveFundsRequest) Descriptor() ([]byte, []int) {
	return file_proto_wallet_wallet_proto_rawDescGZIP(), []int{0}
}

func (x *ReserveFundsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ReserveFundsRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type ReserveFundsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReserveFundsResponse) Reset() {
	*x = ReserveFundsResponse{}
	mi := &file_proto_wallet_wallet_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReserveFundsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveFundsResponse) ProtoMessage() {}

func (x *ReserveFundsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_wallet_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveFundsResponse.ProtoReflect.Descriptor instead.
func (*ReserveFundsResponse) Descriptor() ([]byte, []int) {
	return file_proto_wallet_wallet_proto_rawDescGZIP(), []int{1}
}

func (x *ReserveFundsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ReserveFundsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ReleaseFundsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Amount        int64                  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseFundsRequest) Reset() {
	*x = ReleaseFundsRequest{}
	mi := &file_proto_wallet_wallet_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseFundsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseFundsRequest) ProtoMessage() {}

func (x *ReleaseFundsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_wallet_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseFundsRequest.ProtoReflect.Descriptor instead.
func (*ReleaseFundsRequest) Descriptor() ([]byte, []int) {
	return file_proto_wallet_wallet_proto_rawDescGZIP(), []int{2}
}

func (x *ReleaseFundsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ReleaseFundsRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type ReleaseFundsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseFundsResponse) Reset() {
	*x = ReleaseFundsResponse{}
	mi := &file_proto_wallet_wallet_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseFundsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseFundsResponse) ProtoMessage() {}

func (x *ReleaseFundsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_wallet_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseFundsResponse.ProtoReflect.Descriptor instead.
func (*ReleaseFundsResponse) Descriptor() ([]byte, []int) {
	return file_proto_wallet_wallet_proto_rawDescGZIP(), []int{3}
}

func (x *ReleaseFundsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ReleaseFundsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CommitFundsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Amount        int64                  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitFundsRequest) Reset() {
	*x = CommitFundsRequest{}
	mi := &file_proto_wallet_wallet_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitFundsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitFundsRequest) ProtoMessage() {}

func (x *CommitFundsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_wallet_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitFundsRequest.ProtoReflect.Descriptor instead.
func (*CommitFundsRequest) Descriptor() ([]byte, []int) {
	return file_proto_wallet_wallet_proto_rawDescGZIP(), []int{4}
}

func (x *CommitFundsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CommitFundsRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type CommitFundsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitFundsResponse) Reset() {
	*x = CommitFundsResponse{}
	mi := &file_proto_wallet_wallet_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitFundsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitFundsResponse) ProtoMessage() {}

func (x *CommitFundsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_wallet_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitFundsResponse.ProtoReflect.Descriptor instead.
func (*CommitFundsResponse) Descriptor() ([]byte, []int) {
	return file_proto_wallet_wallet_proto_rawDescGZIP(), []int{5}
}

func (x *CommitFundsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CommitFundsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type TopUpRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Amount        int64                  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"` // Amount to top up
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopUpRequest) Reset() {
	*x = TopUpRequest{}
	mi := &file_proto_wallet_wallet_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopUpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopUpRequest) ProtoMessage() {}

func (x *TopUpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_wallet_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopUpRequest.ProtoReflect.Descriptor instead.
func (*TopUpRequest) Descriptor() ([]byte, []int) {
	return file_proto_wallet_wallet_proto_rawDescGZIP(), []int{6}
}

func (x *TopUpRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type TopUpResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // True if the top up was successful, false otherwise
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`      // Error message if the top up failed
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopUpResponse) Reset() {
	*x = TopUpResponse{}
	mi := &file_proto_wallet_wallet_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopUpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopUpResponse) ProtoMessage() {}

func (x *TopUpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_wallet_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopUpResponse.ProtoReflect.Descriptor instead.
func (*TopUpResponse) Descriptor() ([]byte, []int) {
	return file_proto_wallet_wallet_proto_rawDescGZIP(), []int{7}
}

func (x *TopUpResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TopUpResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type BalanceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BalanceRequest) Reset() {
	*x = BalanceRequest{}
	mi := &file_proto_wallet_wallet_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceRequest) ProtoMessage() {}

func (x *BalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_wallet_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceRequest.ProtoReflect.Descriptor instead.
func (*BalanceRequest) Descriptor() ([]byte, []int) {
	return file_proto_wallet_wallet_proto_rawDescGZIP(), []int{8}
}

type BalanceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Balance       int64                  `protobuf:"varint,1,opt,name=balance,proto3" json:"balance,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BalanceResponse) Reset() {
	*x = BalanceResponse{}
	mi := &file_proto_wallet_wallet_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceResponse) ProtoMessage() {}

func (x *BalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_wallet_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceResponse.ProtoReflect.Descriptor instead.
func (*BalanceResponse) Descriptor() ([]byte, []int) {
	return file_proto_wallet_wallet_proto_rawDescGZIP(), []int{9}
}

func (x *BalanceResponse) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *BalanceResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CreateWalletRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWalletRequest) Reset() {
	*x = CreateWalletRequest{}
	mi := &file_proto_wallet_wallet_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWalletRequest) ProtoMessage() {}

func (x *CreateWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_wallet_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWalletRequest.ProtoReflect.Descriptor instead.
func (*CreateWalletRequest) Descriptor() ([]byte, []int) {
	return file_proto_wallet_wallet_proto_rawDescGZIP(), []int{10}
}

type CreateWalletResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWalletResponse) Reset() {
	*x = CreateWalletResponse{}
	mi := &file_proto_wallet_wallet_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWalletResponse) ProtoMessage() {}

func (x *CreateWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wallet_wallet_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWalletResponse.ProtoReflect.Descriptor instead.
func (*CreateWalletResponse) Descriptor() ([]byte, []int) {
	return file_proto_wallet_wallet_proto_rawDescGZIP(), []int{11}
}

func (x *CreateWalletResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateWalletResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_wallet_wallet_proto protoreflect.FileDescriptor

const file_proto_wallet_wallet_proto_rawDesc = "" +
	"\n" +
	"\x19proto/wallet/wallet.proto\x12\fproto_wallet\"F\n" +
	"\x13ReserveFundsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x01R\x06amount\"F\n" +
	"\x14ReserveFundsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"F\n" +
	"\x13ReleaseFundsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x03R\x06amount\"F\n" +
	"\x14ReleaseFundsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"E\n" +
	"\x12CommitFundsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x03R\x06amount\"E\n" +
	"\x13CommitFundsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"&\n" +
	"\fTopUpRequest\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x03R\x06amount\"?\n" +
	"\rTopUpResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\x10\n" +
	"\x0eBalanceRequest\"A\n" +
	"\x0fBalanceResponse\x12\x18\n" +
	"\abalance\x18\x01 \x01(\x03R\abalance\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\x15\n" +
	"\x13CreateWalletRequest\"J\n" +
	"\x14CreateWalletResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2\xee\x01\n" +
	"\vWalletTopUP\x12U\n" +
	"\fCreateWallet\x12!.proto_wallet.CreateWalletRequest\x1a\".proto_wallet.CreateWalletResponse\x12F\n" +
	"\aBalance\x12\x1c.proto_wallet.BalanceRequest\x1a\x1d.proto_wallet.BalanceResponse\x12@\n" +
	"\x05TopUp\x12\x1a.proto_wallet.TopUpRequest\x1a\x1b.proto_wallet.TopUpResponse2\x8a\x02\n" +
	"\x06Wallet\x12U\n" +
	"\fReserveFunds\x12!.proto_wallet.ReserveFundsRequest\x1a\".proto_wallet.ReserveFundsResponse\x12U\n" +
	"\fReleaseFunds\x12!.proto_wallet.ReleaseFundsRequest\x1a\".proto_wallet.ReleaseFundsResponse\x12R\n" +
	"\vCommitFunds\x12 .proto_wallet.CommitFundsRequest\x1a!.proto_wallet.CommitFundsResponseB9Z7github.com/vsespontanno/eCommerce/internal/proto/walletb\x06proto3"

var (
	file_proto_wallet_wallet_proto_rawDescOnce sync.Once
	file_proto_wallet_wallet_proto_rawDescData []byte
)

func file_proto_wallet_wallet_proto_rawDescGZIP() []byte {
	file_proto_wallet_wallet_proto_rawDescOnce.Do(func() {
		file_proto_wallet_wallet_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_wallet_wallet_proto_rawDesc), len(file_proto_wallet_wallet_proto_rawDesc)))
	})
	return file_proto_wallet_wallet_proto_rawDescData
}

var file_proto_wallet_wallet_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_proto_wallet_wallet_proto_goTypes = []any{
	(*ReserveFundsRequest)(nil),  // 0: proto_wallet.ReserveFundsRequest
	(*ReserveFundsResponse)(nil), // 1: proto_wallet.ReserveFundsResponse
	(*ReleaseFundsRequest)(nil),  // 2: proto_wallet.ReleaseFundsRequest
	(*ReleaseFundsResponse)(nil), // 3: proto_wallet.ReleaseFundsResponse
	(*CommitFundsRequest)(nil),   // 4: proto_wallet.CommitFundsRequest
	(*CommitFundsResponse)(nil),  // 5: proto_wallet.CommitFundsResponse
	(*TopUpRequest)(nil),         // 6: proto_wallet.TopUpRequest
	(*TopUpResponse)(nil),        // 7: proto_wallet.TopUpResponse
	(*BalanceRequest)(nil),       // 8: proto_wallet.BalanceRequest
	(*BalanceResponse)(nil),      // 9: proto_wallet.BalanceResponse
	(*CreateWalletRequest)(nil),  // 10: proto_wallet.CreateWalletRequest
	(*CreateWalletResponse)(nil), // 11: proto_wallet.CreateWalletResponse
}
var file_proto_wallet_wallet_proto_depIdxs = []int32{
	10, // 0: proto_wallet.WalletTopUP.CreateWallet:input_type -> proto_wallet.CreateWalletRequest
	8,  // 1: proto_wallet.WalletTopUP.Balance:input_type -> proto_wallet.BalanceRequest
	6,  // 2: proto_wallet.WalletTopUP.TopUp:input_type -> proto_wallet.TopUpRequest
	0,  // 3: proto_wallet.Wallet.ReserveFunds:input_type -> proto_wallet.ReserveFundsRequest
	2,  // 4: proto_wallet.Wallet.ReleaseFunds:input_type -> proto_wallet.ReleaseFundsRequest
	4,  // 5: proto_wallet.Wallet.CommitFunds:input_type -> proto_wallet.CommitFundsRequest
	11, // 6: proto_wallet.WalletTopUP.CreateWallet:output_type -> proto_wallet.CreateWalletResponse
	9,  // 7: proto_wallet.WalletTopUP.Balance:output_type -> proto_wallet.BalanceResponse
	7,  // 8: proto_wallet.WalletTopUP.TopUp:output_type -> proto_wallet.TopUpResponse
	1,  // 9: proto_wallet.Wallet.ReserveFunds:output_type -> proto_wallet.ReserveFundsResponse
	3,  // 10: proto_wallet.Wallet.ReleaseFunds:output_type -> proto_wallet.ReleaseFundsResponse
	5,  // 11: proto_wallet.Wallet.CommitFunds:output_type -> proto_wallet.CommitFundsResponse
	6,  // [6:12] is the sub-list for method output_type
	0,  // [0:6] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_proto_wallet_wallet_proto_init() }
func file_proto_wallet_wallet_proto_init() {
	if File_proto_wallet_wallet_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_wallet_wallet_proto_rawDesc), len(file_proto_wallet_wallet_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_wallet_wallet_proto_goTypes,
		DependencyIndexes: file_proto_wallet_wallet_proto_depIdxs,
		MessageInfos:      file_proto_wallet_wallet_proto_msgTypes,
	}.Build()
	File_proto_wallet_wallet_proto = out.File
	file_proto_wallet_wallet_proto_goTypes = nil
	file_proto_wallet_wallet_proto_depIdxs = nil
}
